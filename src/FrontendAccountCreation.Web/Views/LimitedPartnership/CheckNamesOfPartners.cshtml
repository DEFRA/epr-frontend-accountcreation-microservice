@using FrontendAccountCreation.Web.Constants
@using FrontendAccountCreation.Web.Controllers.ReprocessorExporter
@using FrontendAccountCreation.Web.ViewModels.ReExAccount

@{
    bool hasIndividualPartners = Model.Any(x => x.IsPerson);
    bool hasCompanyPartners = Model.Any(x => !x.IsPerson);
    ViewData["Title"] = Localizer[GetLocalizer(hasIndividualPartners, hasCompanyPartners, "Title_Individual", "Title_Company", "Title_Both")];
    ViewData["ApplicationTitleOverride"] = LayoutOverrides.ReExTitleOverride;
    ViewData["HeaderOverride"] = LayoutOverrides.ReExOrganisationHeaderOverride;
}

@model List<ReExLimitedPartnershipPersonOrCompany>

<div class="govuk-width-container ">

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <br>

            <h1 class="govuk-heading-l">@Localizer[GetLocalizer(hasIndividualPartners, hasCompanyPartners, "H1_Individual", "H1_Company", "H1_Both")]</h1>
            <div class="govuk-summary-card">
                <div class="govuk-summary-card__title-wrapper">
                    <p class="govuk-body"></p>
                </div>

                @{
                    int counter = 0;
                }
                @foreach (var group in Model.GroupBy(p => p.IsPerson))
                {
                    bool.TryParse(group.Key.ToString(), out bool isPerson);
                    string partnerNameLabel = isPerson ? "CheckNamesOfPartners.FullName" : "CheckNamesOfPartners.Company";

                    if (hasIndividualPartners && hasCompanyPartners)
                    {
                        string subHeaderText = isPerson ? "CheckNamesOfPartners.H2_Individual" : "CheckNamesOfPartners.H2_Company";
                        <h2 class="govuk-heading-m govuk-!-margin-top-8 govuk-!-margin-bottom-4">@Localizer[subHeaderText].Value</h2>
                    }

                    <hr />
                    var partnersPerType = group.ToList();
                    <div class="govuk-summary-card__content">
                        <dl class="govuk-summary-list">

                            @for (int i = 0; i < partnersPerType.Count; i++, counter++)
                            {
                                <div class="govuk-summary-list__row">
                                    <dt class="govuk-summary-list__value">
                                        @Localizer[partnerNameLabel].Value
                                    </dt>
                                    <dd class="govuk-summary-list__value">
                                        @Html.DisplayFor(x => partnersPerType[i].Name)
                                    </dd>
                                    <dd class="govuk-summary-list__actions">
                                        <a class="govuk-link" href="@Url.Action(nameof(LimitedPartnershipController.NamesOfPartners), "LimitedPartnership", null)">
                                            @SharedLocalizer["Change"]
                                            <span class="govuk-visually-hidden">@Localizer["CheckNamesOfPartners.PartnersName"]</span>
                                        </a>
                                    </dd>
                                    <dd class="govuk-summary-list__actions">
                                        @if (Model.Count > 1)
                                        {
                                        <a class="govuk-link" href="@Url.Action(nameof(LimitedPartnershipController.CheckNamesOfPartners), "LimitedPartnership", new { id = partnersPerType[i].Id })">
                                            @SharedLocalizer["Remove"]
                                            <span class="govuk-visually-hidden">@Localizer["CheckNamesOfPartners.Partner"]</span>
                                        </a>
                                        }
                                    </dd>
                                </div>
                            }
                        </dl>
                    </div>
                }
            </div>

            <!--
            <table class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header govuk-table__header"></th>
                        <th scope="col" class="govuk-table__header govuk-table__header"></th>
                        <th scope="col" class="govuk-table__header govuk-table__header--numeric"></th>
                        <th scope="col" class="govuk-table__header govuk-table__header--numeric"></th>
                    </tr>
                </thead>

                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell govuk-table__cell">Full name</th>
                        <td class="govuk-table__cell govuk-table__cell">Frankie Bridger<a class="govuk-link" href="#">
                        <td class="govuk-table__cell govuk-table__cell--numeric">
                            <a class="govuk-link" href="name-all-partners-change">
                                Change<span class="govuk-visually-hidden"> </span>
                            </a>
                        </td>
                        <td class="govuk-table__cell govuk-table__cell--numeric">
                            <a class="govuk-link" href="check-partners-remove">
                                Remove<span class="govuk-visually-hidden"> </span>
                            </a>
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell govuk-table__cell">Full name</th>
                        <td class="govuk-table__cell govuk-table__cell">Rekha Patel<a class="govuk-link" href="#">
                        <td class="govuk-table__cell govuk-table__cell--numeric">
                            <a class="govuk-link" href="name-all-partners-change-2">
                                Change<span class="govuk-visually-hidden"> </span>
                            </a>
                        </td>
                        <td class="govuk-table__cell govuk-table__cell--numeric">
                            <a class="govuk-link" href="check-partners-remove-2">
                                Remove<span class="govuk-visually-hidden"> </span>
                            </a>
                        </td>
                    </tr>
                </tbody>
            </table>
            -->

            <form action="partner-you" method="post" novalidate>
                <input type="hidden" name="answers-checked" value="true">
                <input type="hidden" name="waste-data-reprocesser" value="true">

                <!-- goes to check your details -->
                @Html.ActionLink(@SharedLocalizer["Continue"].Value, nameof(LimitedPartnershipController.LimitedPartnershipRole), "LimitedPartnership", null,
                         new
                         {
                             @class = "govuk-button"
                         })

@*                 <button class="govuk-button" data-module="govuk-button">
                    Continue
                </button> *@
            </form>
        </div>

    </div>

</div>

@{
    string GetLocalizer(bool isPerson, bool isCompany, string person, string company, string both)
    {
        string localizer = both;
        if (isPerson && isCompany)
        {
            localizer = both;
        }
        else if (isCompany)
        {
            localizer = company;
        }
        else if (isPerson)
        {
            localizer = person;
        }
        return string.Concat("CheckNamesOfPartners.", localizer);
    }
}