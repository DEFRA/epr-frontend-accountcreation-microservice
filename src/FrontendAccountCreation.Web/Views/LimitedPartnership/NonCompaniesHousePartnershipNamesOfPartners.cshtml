@using FrontendAccountCreation.Web.Constants
@using FrontendAccountCreation.Web.Controllers.ReprocessorExporter
@using FrontendAccountCreation.Web.Extensions
@using FrontendAccountCreation.Web.ViewModels.ReExAccount
@using FrontendAccountCreation.Web.ViewModels.Shared.GovUK
@model PartnershipPartnersViewModel;

@{
    ViewData["Title"] = Localizer[GetLocalizer(Model.ExpectsIndividualPartners, Model.ExpectsCompanyPartners, "Title_Individual", "Title_Company", "Title_Both")];
    ViewData["ApplicationTitleOverride"] = LayoutOverrides.ReExTitleOverride;
    ViewData["HeaderOverride"] = LayoutOverrides.ReExOrganisationHeaderOverride;

    Model.DeleteAction = nameof(LimitedPartnershipController.NonCompaniesHousePartnershipNamesOfPartnersDelete);

    var fieldOrder = new Dictionary<string, string[]>
    {
        { nameof(PartnershipPartnersViewModel.Partners), new[] {
            nameof(PartnershipPersonOrCompanyViewModel.CompanyName),
            nameof(PartnershipPersonOrCompanyViewModel.PersonName)
        } },
    };
    var errorsViewModel = new ErrorsViewModel(ViewData.ModelState.ToErrorDictionary(), Localizer, fieldOrder);
    ViewBag.ErrorsViewModel = errorsViewModel;
}

<div class="govuk-width-container ">

    <main class="govuk-main-wrapper govuk-!-padding-top-4" id="main-content" role="main">

        <div class="govuk-grid-row ">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-l">
                    @Localizer[GetLocalizer(Model.ExpectsIndividualPartners, Model.ExpectsCompanyPartners, "H1_Individual", "H1_Company", "H1_Both")]
                </h1>

                <div class="govuk-hint">
                    @Localizer[GetLocalizer(Model.ExpectsIndividualPartners, Model.ExpectsCompanyPartners, "Hint_Individual", "Hint_Company", "Hint_Both")]
                </div>
                <hr>
                <br>
                @await Html.PartialAsync("Partials/Govuk/_ErrorSummary", errorsViewModel)

                <form method="post">

                    @await Html.PartialAsync("Partials/_NamesOfPartnersInputs", Model)

                    <div class="govuk-button-group">

                        <!-- Add another partner-->
                        <button class="govuk-button govuk-button--secondary" asp-controller="LimitedPartnership" asp-action="@nameof(LimitedPartnershipController.NonCompaniesHousePartnershipNamesOfPartners)" name="command" value="add" type="submit">
                            @Localizer["NonCompaniesHousePartnershipNamesOfPartners.AddAnotherPartner"]
                        </button>

                        <!-- save partners -->
                        <button class="govuk-button" asp-controller="LimitedPartnership" asp-action="@nameof(LimitedPartnershipController.NonCompaniesHousePartnershipNamesOfPartners)" name="command" value="save" type="submit">
                            @SharedLocalizer["Continue"]
                        </button>
                    </div>

                </form>
            </div>
        </div>
    </main>
</div>

@{
    string GetLocalizer(bool isPerson, bool isCompany, string person, string company, string both)
    {
        string localizer = both;
        if (isPerson && isCompany)
        {
            localizer = both;
        }
        else if (isCompany)
        {
            localizer = company;
        }
        else if (isPerson)
        {
            localizer = person;
        }
        return string.Concat("NonCompaniesHousePartnershipNamesOfPartners.", localizer);
    }
}