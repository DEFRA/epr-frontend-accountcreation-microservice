@using FrontendAccountCreation.Web.Extensions
@using FrontendAccountCreation.Web.ViewModels.ReExAccount
@using FrontendAccountCreation.Web.ViewModels.Shared.GovUK
@model PartnershipPartnersViewModel
@inject IViewLocalizer Localizer

@Html.HiddenFor(m => m.ExpectsCompanyPartners)
@Html.HiddenFor(m => m.ExpectsIndividualPartners)
@Html.HiddenFor(m => m.DeleteAction)

@{
    var errorsViewModel = ViewBag.ErrorsViewModel as ErrorsViewModel;
}

@for (int i = 0; i < Model.Partners.Count; ++i)
{
    <fieldset class="govuk-fieldset">
        <legend class="govuk-visually-hidden">@Localizer["_NamesOfPartnersInputs.Legend"]</legend>
        <p></p>
        <div class="govuk-form-group@(errorsViewModel.HasErrorKey($"Partners[{i}].PersonName") 
            || errorsViewModel.HasErrorKey($"Partners[{i}].CompanyName") ? " govuk-form-group--error" : "")">
            @Html.HiddenFor(m => m.Partners[i].Id)

            @if (Model.ExpectsCompanyPartners)
            {
                    <label gov-for="Partners[i].CompanyName" class="govuk-label govuk-!-font-weight-bold">@Localizer["_NamesOfPartnersInputs.CompanyName"]</label>
                    @await Html.PartialAsync("Partials/Govuk/_FormItemError", errorsViewModel[$"Partners[{i}].CompanyName"])
                    <input class="govuk-input @(errorsViewModel.HasErrorKey($"Partners[{i}].CompanyName") ? "govuk-input--error" : "")"
                           type="text"
                           gov-for="Partners[i].CompanyName" gov-value="@Model.Partners[i].CompanyName">
            }

            @if (Model.ExpectsCompanyPartners && Model.ExpectsIndividualPartners)
            {
                <br /><br />
                <p class="govuk-body"><strong>@Localizer["_NamesOfPartnersInputs.Or"]</strong></p>
            }

            @if (Model.ExpectsIndividualPartners)
            {
                string personNameLabel = Model.ExpectsCompanyPartners ? "_NamesOfPartnersInputs.IndividualPartnersFullName" : "_NamesOfPartnersInputs.FullName";
                <!-- Individual partner’s full name -->
                    <label gov-for="Partners[i].PersonName" class="govuk-label govuk-!-font-weight-bold">@Localizer[personNameLabel]</label>
                    @await Html.PartialAsync("Partials/Govuk/_FormItemError", errorsViewModel[$"Partners[{i}].PersonName"])
                    <input class="govuk-input @(errorsViewModel.HasErrorKey($"Partners[{i}].PersonName") ? "govuk-input--error" : "")"
                           type="text"
                           gov-for="Partners[i].PersonName" gov-value="@Model.Partners[i].PersonName">
            }

            <br /><br />

            @if (Model.Partners.Count > 1)
            {
                <!-- remove partner -->
                <div class="govuk-!-text-align-right">
                    @Html.ActionLink(@SharedLocalizer["Remove"].Value, Model.DeleteAction, "LimitedPartnership",
                             new
                             {
                                 @id = @Model.Partners[i].Id
                             },
                             new
                             {
                                 @class = "govuk-button govuk-button--secondary"
                             })
                </div>
            }
            <hr>
        </div>
    </fieldset>
}