<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddAnApprovedPerson.BulletAccreditation" xml:space="preserve">
    <value>[Welsh]Apply for accreditation</value>
  </data>
  <data name="AddAnApprovedPerson.BulletSubmit" xml:space="preserve">
    <value>[Welsh]Submit and verify data returns</value>
  </data>
  <data name="AddAnApprovedPerson.CompanyDirector" xml:space="preserve">
    <value>company director</value>
  </data>
  <data name="AddAnApprovedPerson.CompanySecretary" xml:space="preserve">
    <value>[Welsh]company secretary</value>
  </data>
  <data name="AddAnApprovedPerson.Director" xml:space="preserve">
    <value>[Welsh]director</value>
  </data>
  <data name="AddAnApprovedPerson.IAgreeToBeAnApprovedPerson" xml:space="preserve">
    <value>[Welsh]I agree to be an approved person</value>
  </data>
  <data name="AddAnApprovedPerson.IntroInstruction" xml:space="preserve">
    <value>[Welsh]You can continue to add the organisation without inviting someone to be an approved person. One must be appointed before you can</value>
  </data>
  <data name="AddAnApprovedPerson.Introtext1" xml:space="preserve">
    <value>[Welsh]You are eligible to become an 'approved person' or you can invite somebody else to do this. An approved person needs to be invited to take on tasks on behalf of the organisation.</value>
  </data>
  <data name="AddAnApprovedPerson.IntroText2" xml:space="preserve">
    <value>[Welsh]An approved person may delegate their function to another person (a delegate) at a later stage - subject to regulator approval.</value>
  </data>
  <data name="AddAnApprovedPerson.IntroText3" xml:space="preserve">
    <value>[Welsh]More than one person can be invited - you will need to confirm their role, enter their name and contact details.</value>
  </data>
  <data name="AddAnApprovedPerson.IWillInviteAnotherApprovedPerson" xml:space="preserve">
    <value>[Welsh]I will invite another eligible person to be an approved person</value>
  </data>
  <data name="AddAnApprovedPerson.IWillInviteApprovedPersonLater" xml:space="preserve">
    <value>[Welsh]I will invite an approved person later</value>
  </data>
  <data name="AddAnApprovedPerson.NonUk.RolesInstruction" xml:space="preserve">
    <value>A person who has control or management of a business that does not have a registered office, head office or principal place of business in the UK. For example</value>
  </data>
  <data name="AddAnApprovedPerson.OptionError" xml:space="preserve">
    <value>[Welsh]Select an option</value>
  </data>
  <data name="AddAnApprovedPerson.RolesHeading" xml:space="preserve">
    <value>[Welsh]Roles eligible to be an approved person</value>
  </data>
  <data name="AddAnApprovedPerson.RolesInstruction" xml:space="preserve">
    <value>[Welsh]Either of these roles can be an approved person</value>
  </data>
  <data name="AddAnApprovedPerson.SelectOptionText" xml:space="preserve">
    <value>[Welsh]Select an option to proceed.</value>
  </data>
  <data name="AddAnApprovedPerson.Title" xml:space="preserve">
    <value>[Welsh]Add an approved person </value>
  </data>
  <data name="AddAnApprovedPerson.UserHeading" xml:space="preserve">
    <value>[Welsh]Invite users in your team</value>
  </data>
</root>